@charset "UTF-8";
/* style.scss — updated for manual .body depth via --depth */
:root {
  --scenePerspective: 1;
  --scenePerspectiveOriginX: 50;
  --scenePerspectiveOriginY: 50;
  /* Keep perspective origins at 50 50 to centre view */
  --itemZ: 2; /* Base gap unit for layering */
  --cameraSpeed: 150; /* Z-spacing multiplier */
  --cameraZ: 0; /* Updated on scroll */
  --viewportHeight: 0; /* Computed via JS */
  --ring-diameter: 600px; /* Default static ring diameter */
  --ring-thickness: 40px; /* Ring border thickness */
}

body {
  font-family: "proforma", serif;
}

.viewport {
  height: calc(var(--viewportHeight) * 1px);
}

.connectors {
  position: fixed;
  inset: 0;
  pointer-events: none;
  z-index: 1;
}

@keyframes fadeIn {
  from {
    stroke-opacity: 0;
  }
  to {
    stroke-opacity: 1;
  }
}
@keyframes fadeOut {
  from {
    stroke-opacity: 1;
  }
  to {
    stroke-opacity: 0;
  }
}
.connectors line.fade-out {
  animation: fadeOut 0s ease-in-out forwards;
}

.connectors line {
  stroke: rgb(228, 228, 229);
  stroke-width: 1.5;
  vector-effect: non-scaling-stroke;
  stroke-opacity: 1;
  animation: fadeIn 0.3s ease-in-out forwards;
}

.viewport .scene3D-container {
  position: fixed;
  inset: 0;
  perspective: calc(var(--scenePerspective) * var(--cameraSpeed) * 1px);
  perspective-origin: calc(var(--scenePerspectiveOriginX) * 1%) calc(var(--scenePerspectiveOriginY) * 1%);
  will-change: perspective-origin;
  transform: translate3d(0, 0, 0);
  transform-style: preserve-3d;
  z-index: 2;
}

.viewport .scene3D-container .scene3D {
  position: absolute;
  inset: 0;
  transform-style: preserve-3d;
  transform: translateZ(calc(var(--cameraZ) * 1px));
}

/* Static .body rings with manual depth via --depth */
.body {
  width: var(--ring-diameter);
  height: var(--ring-diameter);
  background: transparent;
  border: var(--ring-thickness) solid rgb(225, 255, 0);
  opacity: 0.75;
  border-radius: 50%;
  box-sizing: border-box;
  position: absolute;
  top: 50%;
  left: 50%;
  /* Use --depth custom property (in px) for Z position; default 0 */
  transform: translate(-50%, -50%) translateZ(calc(var(--depth, 0) * 1px));
  background-color: rgb(9, 8, 15);
}

/* Dynamic rings & objects remain unchanged */
.viewport .scene3D-container .scene3D > .ring,
.viewport .scene3D-container .scene3D > .object {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.ring {
  width: var(--ring-diameter);
  height: var(--ring-diameter);
  border: 1px solid rgb(228, 228, 229);
  border-radius: 50%;
  background: transparent;
  opacity: 1;
  box-sizing: border-box;
  transition: opacity 0.3s ease;
}

.object {
  width: 100px;
  height: 100px;
  border-radius: 50%;
  border: 1px solid rgb(228, 228, 229);
  background-color: rgb(248, 248, 248);
  box-sizing: border-box;
  z-index: 0px;
}

#distortion-graph {
  position: fixed;
  bottom: 0;
  left: 50px; /* 50px gap from left edge */
  right: 50px; /* 50px gap from right edge */
  height: 40px; /* however tall you want it */
  pointer-events: none;
  z-index: 4;
  overflow: visible;
  padding-bottom: 20px;
}

#distortion-svg {
  width: 100%;
  height: 100%;
  overflow: visible;
}

#distortion-svg line.indicator {
  stroke: rgb(168, 168, 170);
  stroke-width: 1.5;
}

#distortion-svg .distance-label {
  font-size: 1.5rem; /* pick your size */
  font-weight: 100;
  fill: rgb(168, 168, 170); /* text color */
  dominant-baseline: hanging; /* align the text at its y= position */
  pointer-events: none;
}

#distortion-svg .baseline {
  stroke: rgb(89, 88, 93);
  stroke-width: 1.5;
}

#distortion-svg line.tick {
  stroke: rgb(128, 128, 132);
  stroke-width: 1.5;
  pointer-events: none;
}

#distortion-svg .distortion-zone {
  stroke: deepskyblue;
  stroke-width: 8;
  pointer-events: none;
}

#distortion-modal {
  z-index: 1000;
  position: fixed;
  inset: 0;
  overflow: visible;
  display: flex;
  align-items: center;
  justify-content: center;
}

#distortion-modal.hidden {
  display: none;
}

#distortion-modal .modal-content {
  background: rgb(255, 255, 255);
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  overflow: visible;
  padding: 20px;
  box-sizing: border-box;
  max-width: 800px;
}

#distortion-modal #modal-close {
  position: absolute;
  top: 35px;
  right: 35px;
  background: none;
  border: none;
  font-size: 1.7rem;
  line-height: 1;
  cursor: pointer;
  color: #666;
  padding: 4px;
}

#popup-distortion-graph {
  width: 80vw;
  max-width: 700px;
  height: 50vh;
  max-height: 400px;
  padding: 10px;
  overflow: visible;
  background-color: rgb(235, 235, 235);
  box-sizing: border-box;
}

#popup-distortion-graph svg {
  width: 100%;
  height: 100%;
}

#distortion-modal .modal-content .distortion-title {
  font-size: 1.5rem;
  font-weight: 700;
  margin-bottom: 8px;
  color: #333;
}

/* style the paragraph */
#distortion-modal .modal-content .distortion-explanation {
  font-size: 1rem;
  line-height: 1.4;
  margin-bottom: 16px;
  color: #555;
}

.background {
  position: fixed;
  inset: 0; /* shorthand for top/right/bottom/left:0 */
  background: url("../assets/images/background.png") center/cover no-repeat;
  z-index: 0;
  opacity: 0.2; /* behind everything */
}

.colour-background {
  position: fixed;
  inset: 0;
  background-color: rgb(9, 8, 15);
  z-index: -1;
}

.viewport {
  position: relative;
  z-index: 1; /* in front of the background */
  height: calc(var(--viewportHeight) * 1px);
}

.background-parallax {
  position: fixed;
  inset: 0; /* full-screen */
  background: url("../assets/images/background.png") center/cover no-repeat;
  transform-origin: center center;
  will-change: transform; /* hint for smooth animation */
  pointer-events: none; /* let clicks through */
  z-index: 0; /* between .background (which could be z-index:−1) and .viewport (z-index:1) */
  opacity: 0.5;
}

.scene3D .earth {
  position: absolute;
  top: 50%;
  left: 50%;
  background: url("../assets/images/earth.png") center/cover no-repeat;
  border-radius: 50%;
  transform: translate(-50%, -50%) translateZ(-50px);
  z-index: 1; /* behind the objects (if needed) */
}

.visual img {
  display: block; /* prevent stray descender whitespace */
  width: 100%; /* fill the container’s width */
  height: auto; /* preserve aspect ratio */
}

.ring-label {
  position: absolute;
  width: 300px;
  top: 50%;
  left: -48%;
  transform: translate(-50%, -50%);
  pointer-events: none;
  font-size: 3.5rem;
  color: rgb(248, 248, 248);
  opacity: 0;
  transition: opacity 0.3s ease;
  text-align: center;
  font-weight: 200;
  font-style: italic;
}

.object-label {
  display: none; /* hidden by default */
  position: absolute; /* relative to .object */
  top: 100%; /* sits just below the circle */
  left: 50%;
  transform: translateX(-50%) translateY(10px); /* small gap */
  text-align: center;
  white-space: nowrap;
  pointer-events: none;
  /* style as you like: */
  background: rgb(248, 248, 248);
  padding: 10px 10px;
  z-index: 1;
}

.object:hover {
  z-index: 10; /* any number higher than the default 0 */
}

.object:hover .object-label {
  display: block; /* show on hover */
}

.object-label-name {
  display: block; /* each on its own line */
  font-size: 1rem; /* tweak */
  font-weight: 600;
  font-style: italic; /* e.g. make the name bold */
  color: rgb(9, 8, 15); /* example: yellow name */
  margin-bottom: 2px; /* small gap down to year */
}

.object-label-year {
  display: block;
  font-size: 1rem; /* slightly smaller */
  font-weight: 200;
  color: rgb(49, 48, 54); /* example: light gray year */
}

.ring.normal {
  opacity: 1;
}

.ring.spotlight {
  opacity: 1;
}

.ring.shadow {
  opacity: 0.1;
}

.ring.ghost {
  opacity: 0;
}

/* when its ring is spotlighted, fade it in */
.ring.spotlight .ring-label {
  opacity: 1;
  pointer-events: auto;
}

/* keep your JS-generated outline for non-spotlight states */
.ring.spotlight[data-type="1"] {
  /* override just the colour... */
  outline-color: deepskyblue !important;
  /* if you also want a thicker ring when spotlighted, uncomment: */
  /* outline-width: 20px !important; */
  /* outline-offset: -10px !important; */
}

.ring.spotlight[data-type="2"] {
  outline-color: deepskyblue !important;
  /* outline-width: 2px !important;       if you need to tweak thickness */
  /* outline-offset: -1px !important; */
}

.ring-extra-label {
  position: absolute;
  width: 300px; /* same width as .ring-label */
  top: 50%;
  left: 160%;
  transform: translate(-50%, -50%);
  pointer-events: none;
  /* initially invisible; only fade in once this ring is “spotlighted” */
  opacity: 0;
  transition: opacity 0.3s ease;
  text-align: left;
}

.ring.spotlight .ring-extra-label {
  opacity: 1;
  pointer-events: auto;
}

/* Now you can style the two <span> inside .ring-extra-label however you like: */
.ring-extra-label .object-type {
  display: block;
  font-size: 1.5rem;
  font-weight: 400;
  color: rgb(248, 248, 248); /* just an example color */
  margin-bottom: -15px; /* space below “Planet”/“Spacecraft” text */
}

.ring-extra-label .distance-text {
  display: block;
  font-size: 1rem;
  font-weight: 200;
  color: rgb(208, 208, 209); /* example color */
}

.quote-container {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) translateZ(0px);
  pointer-events: none; /* so it doesn’t capture mouse events */
  text-align: left; /* center quote & credit horizontally */
  width: 350px; /* adjust as needed */
  transition: opacity 0.3s ease;
}

/* The quote text itself */
.quote-text {
  font-size: 1.5rem; /* you can override this */
  line-height: 1.3;
  font-weight: 500;
  color: rgb(248, 248, 248); /* or whatever color contrasts your background */
  margin-bottom: 0.5em; /* a small gap before the credit */
}

/* The credit/attribution underneath */
.quote-credit {
  font-size: 0.75rem; /* smaller font */
  font-style: italic;
  font-weight: 200;
  color: rgb(208, 208, 209); /* slightly lighter/dimmer */
}

.quote-container.normal {
  opacity: 0.25;
}

.quote-container.spotlight {
  opacity: 1;
}

.quote-container.shadow {
  opacity: 0.1;
}

.quote-container.ghost {
  opacity: 0;
}

.quote-text .highlight {
  background-color: rgba(255, 255, 0, 0.5); /* pale yellow highlight */
  padding: 0 0.2rem; /* a tiny bit of horizontal padding */
}

#distortion-warning {
  width: 561px;
  position: fixed;
  top: 20px;
  left: 50%;
  transform: translateX(-50%);
  z-index: 10;
  display: flex;
  align-items: center;
  font-size: 1rem;
  font-weight: 200;
  color: rgb(89, 88, 93);
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.3s ease; /* fade in/out over 0.3s */
}

#distortion-warning.visible {
  opacity: 1;
  visibility: visible;
}

#distortion-warning button#learn-more-btn {
  margin-left: 10px;
  background: none;
  border: none;
  padding: 0;
  font-size: 1rem;
  font-weight: 200;
  color: rgb(89, 88, 93);
  text-decoration: underline;
  cursor: pointer;
  font-family: inherit;
}

#distortion-warning button#learn-more-btn:hover {
  text-decoration: none;
}

#distortion-warning .material-symbols-outlined {
  color: rgb(89, 88, 93); /* same as text color */
  vertical-align: middle; /* align with the label text */
  margin-right: 10px;
  margin-bottom: 5px;
}

.void-logo {
  position: fixed;
  top: 20px; /* or whatever offset you like */
  left: 50px;
  width: 125px; /* adjust to taste */
  height: auto;
  z-index: 100; /* make sure it sits above the 3D scene */
}

#info-button {
  position: fixed;
  top: 20px; /* adjust as needed */
  right: 50px; /* adjust as needed */
  color: rgb(248, 248, 248); /* or whatever color contrasts your background */
  cursor: pointer;
  z-index: 1000; /* above everything else */
}
